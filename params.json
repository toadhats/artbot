{"name":"Artbot 420","tagline":"Aleatoric drawing in Processing","body":"<!---\r\nTODO: copy images to site repo and use relative links probably\r\n-->\r\n### Artbot 420\r\n## Aleatoric drawing in Processing.\r\n\r\nA bunch of functions thrown haphazardly together with almost no user interaction beyond editing the code. However, you can:\r\n\r\n- Click anywhere to pause the drawing\r\n- Press Shift-S to save the drawing to /img\r\n- Press Backspace to clear the canvas\r\n\r\n## Functions\r\n\r\n# Drip()\r\n\r\nDistributes shapes (circles) evenly around a centre point using a Gaussian distribution.\r\nLooks like paint drips, or something. When used alongside squiggle() it adds a sense of depth in the centre,\r\nand soft detail noise over the rest, or however you want to think of it. \r\n\r\n<img src=\"https://raw.githubusercontent.com/toadhats/artbot-420/master/img/2015-10-29%2021_30_48-sketch_151029a.png\" height=\"300\" width=\"300\">\r\n<img src=\"https://raw.githubusercontent.com/toadhats/artbot-420/master/img/2015-10-29%2021_43_59-sketch_151029a.png\" height=\"300\" width=\"300\">\r\n\r\n\r\n\r\n# Squiggle()\r\n\r\nKinda 'scribbles' randomly, as if with a permanent marker. Looks cool with evolving colour.\r\nThe offset allows multiple \"squigglers\" to be instantiated without giving each its own\r\nt variable for the perlin noise function. Without different offsets, they'd follow the same path,\r\nwhich is generally not what I want. Each call draws a single point along the path, so call in a\r\nloop.\r\n\r\n<img src=\"https://raw.githubusercontent.com/toadhats/artbot-420/master/img/2015-10-29%2023_04_53-sketch_151029a.png\" height=\"300\" width=\"300\">\r\n<img src=\"https://raw.githubusercontent.com/toadhats/artbot-420/master/img/2015-10-29%2023_37_50-sketch_151029a.png\" height=\"300\" width=\"300\">\r\n\r\n# Signal()\r\n\r\nDraws a squiggly line across the page. Like a squiggler, but the x moves from\r\nleft to right, while the y value is randomized over time via perlin noise. Draws\r\none whole line per call, unlike the squiggler.\r\n\r\nUses its x-coord as a t value, which means we're basically graphing the\r\nperlin function.Offset determines what 'part' of the perlin space we're\r\ngraphing. Scale controls the speed through perlin space, ie 'jaggedness'.\r\n\r\n<img src=\"https://raw.githubusercontent.com/toadhats/artbot-420/master/img/20151030-210556.png\" height=\"300\" width=\"300\">\r\n<img src=\"https://raw.githubusercontent.com/toadhats/artbot-420/master/img/20151030-203016.png\" height=\"300\" width=\"300\">\r\n","google":"UA-69454178-1","note":"Don't delete this file! It's used internally to help with page regeneration."}